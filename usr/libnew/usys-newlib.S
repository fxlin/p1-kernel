# newlib glue. same as usys.S but we change func names to avoid collision 
# with newlib 

# generated by usys.py -- do not edit
#  ./usys.py  > user_sys.S       then manual edit by FL

#include "kernel/syscall.h" 

.globl syscall_fork
    syscall_fork:
    mov x8, #SYS_fork
    svc #0
    ret          
          

.globl syscall_exit
    syscall_exit:
    mov x8, #SYS_exit
    svc #0
    ret          
          

.globl syscall_wait
    syscall_wait:
    mov x8, #SYS_wait
    svc #0
    ret          
          

.globl syscall_pipe
    syscall_pipe:
    mov x8, #SYS_pipe
    svc #0
    ret          
          

.globl syscall_read
    syscall_read:
    mov x8, #SYS_read
    svc #0
    ret          
          

.globl syscall_write
    syscall_write:
    mov x8, #SYS_write
    svc #0
    ret          
          

.globl syscall_close
    syscall_close:
    mov x8, #SYS_close
    svc #0
    ret          
          

.globl syscall_kill
    syscall_kill:
    mov x8, #SYS_kill
    svc #0
    ret          
          

.globl syscall_exec
    syscall_exec:
    mov x8, #SYS_exec
    svc #0
    ret          
          

.globl syscall_open
    syscall_open:
    mov x8, #SYS_open
    svc #0
    ret          
          

.globl syscall_mknod
    syscall_mknod:
    mov x8, #SYS_mknod
    svc #0
    ret          
          

.globl syscall_unlink
    syscall_unlink:
    mov x8, #SYS_unlink
    svc #0
    ret          
          

.globl syscall_fstat
    syscall_fstat:
    mov x8, #SYS_fstat
    svc #0
    ret          
          

.globl syscall_link
    syscall_link:
    mov x8, #SYS_link
    svc #0
    ret          
          

.globl syscall_mkdir
    syscall_mkdir:
    mov x8, #SYS_mkdir
    svc #0
    ret          
          

.globl syscall_chdir
    syscall_chdir:
    mov x8, #SYS_chdir
    svc #0
    ret          
          

.globl syscall_dup
    syscall_dup:
    mov x8, #SYS_dup
    svc #0
    ret          
          

.globl syscall_getpid
    syscall_getpid:
    mov x8, #SYS_getpid
    svc #0
    ret          
          

.globl syscall_sbrk
    syscall_sbrk:
    mov x8, #SYS_sbrk
    svc #0
    ret          
          

.globl syscall_sleep
    syscall_sleep:
    mov x8, #SYS_sleep
    svc #0
    ret          
          

.globl syscall_uptime
    syscall_uptime:
    mov x8, #SYS_uptime
    svc #0
    ret          
          

.globl syscall_lseek
    syscall_lseek:
    mov x8, #SYS_lseek
    svc #0
    ret          
          
.globl syscall_clone
    syscall_clone:
    mov x8, #SYS_clone
    svc #0
    ret